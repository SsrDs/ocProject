<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.online.core.user.dao.UserCourseSectionDao">
    <resultMap id="BeanResultMap" type="com.online.core.user.domain.UserCourseSection" >
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId"  jdbcType="INTEGER" />
        <result column="course_id" property="courseId"  jdbcType="INTEGER" />
        <result column="section_id" property="sectionId"  jdbcType="INTEGER" />
        <result column="status" property="status"  jdbcType="INTEGER" />
        <result column="rate" property="rate"  jdbcType="INTEGER" />
        <result column="create_time" property="createTime"  jdbcType="DATE" />
        <result column="create_user" property="createUser"  jdbcType="VARCHAR" />
        <result column="update_time" property="updateTime"  jdbcType="TIMESTAMP" />
        <result column="update_user" property="updateUser"  jdbcType="VARCHAR" />
        <result column="del" property="del"  jdbcType="TINYINT" />
    </resultMap>


    <sql id="All_Columns">
        user_id, course_id, section_id, status, rate, create_time, create_user,
        update_time, update_user, del, id
    </sql>

    <select id="queryPage" resultType="com.online.core.user.domain.UserCourseSectionDto">
        SELECT t.*,
               c.name as courseName,
               s.name as sectionName
        FROM t_user_course_section t,
             t_course c,
             t_course_section s
        WHERE t.user_id = #{param1.userId,jdbcType=INTEGER}
        AND t.course_id = c.id
        AND t.section_id = s.id
        ORDER BY id DESC
        LIMIT #{param2.startIndex,jdbcType=INTEGER},#{param2.pageSize,jdbcType=INTEGER}
    </select>


    <select id="getTotalItemCount" parameterType="com.online.core.user.domain.UserCourseSection" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM t_user_course_section
        WHERE user_id = #{userId,jdbcType=INTEGER}
    </select>

    <select id="queryLatest" parameterType="com.online.core.user.domain.UserCourseSection" resultType="com.online.core.user.domain.UserCourseSection">
        SELECT
        <include refid="All_Columns" />
        FROM t_user_course_section
        <trim prefix="WHERE " prefixOverrides="AND |OR ">
            <if test="userId != null">
                AND user_id = #{userId, jdbcType=INTEGER}
            </if>
            <if test="courseId != null">
                AND course_id = #{courseId, jdbcType=INTEGER}
            </if>
            <if test="sectionId != null">
                AND section_id = #{sectionId, jdbcType=INTEGER}
            </if>
        </trim>
        ORDER BY update_time DESC
        LIMIT 0, 1
    </select>

    <select id="getById" parameterType="java.lang.Long" resultType="com.online.core.user.domain.UserCourseSection">
        SELECT
        <include refid="All_Columns"  />
        FROM t_user_course_section
        WHERE id = #{id, jdbcType=INTEGER}
    </select>

    <update id="update" parameterType="com.online.core.user.domain.UserCourseSection">
        UPDATE t_user_course_section SET
             user_id = #{userId, jdbcType=INTEGER},
             course_id = #{courseId, jdbcType=INTEGER},
             section_id = #{sectionId, jdbcType=INTEGER},
             status = #{status, jdbcType=INTEGER},
             rate = #{rate, jdbcType=INTEGER},
             update_time = #{updateTime, jdbcType=TIMESTAMP},
             update_user = #{updateUser, jdbcType=VARCHAR}
        WHERE id = #{id, jdbcType=INTEGER}
    </update>
</mapper>